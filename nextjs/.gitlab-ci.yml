# Default image for all jobs
image: node:22-bookworm

# Define pipeline stages
stages:
  - dependencies
  - lint
  - build
  - deploy
  - release

# Global variables
variables:
  NPM_CACHE_FOLDER: .npm
  DEPLOY_PATH: /var/www/cms

# Cache configuration for faster builds
cache:
  key:
    files:
      - package-lock.json
  paths:
    - .npm
    - node_modules

# Job templates
.npm_setup: &npm_setup
  before_script:
    - npm config set cache $NPM_CACHE_FOLDER --global

# ============================================
# DEPENDENCIES STAGE
# ============================================

install:dependencies:
  stage: dependencies
  <<: *npm_setup
  variables:
    NODE_ENV: development  # allow dev dependencies
  script:
    - npm ci
  artifacts:
    paths:
      - node_modules/
    expire_in: 1 hour
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/'
  tags: [install-autoscale]

# ============================================
# LINT STAGE - Parallel, gunakan artifact
# ============================================

lint:format:
  stage: lint
  <<: *npm_setup
  script:
    - npm run format
  dependencies:
    - install:dependencies
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/'
  allow_failure: true
  tags: [test-autoscale]

lint:check:
  stage: lint
  <<: *npm_setup
  script:
    - npm run lint
  dependencies:
    - install:dependencies
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/'
  allow_failure: true
  tags: [test-autoscale]

# ============================================
# BUILD STAGE - Next.js Standalone Build
# ============================================

download-secret-var:
  stage: dependencies
  variables:
    SECURE_FILES_DOWNLOAD_PATH: './'
  script:
    - curl --silent "https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer" | bash
  artifacts:
    name: $CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID
    paths:
      - .env
    expire_in: 1 days
    when: always
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH'
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_MESSAGE !~ /(\d+\.)(\d+\.)(\d+)/'
    - if: '$CI_COMMIT_TAG =~ /^v(\d+\.)(\d+\.)(\d+)$/'
  allow_failure: false
  tags:
    - install-autoscale

build:
  stage: build
  <<: *npm_setup
  script:
    # Build Next.js dengan standalone output
    - npm run build

    # Copy static files dan public ke standalone directory
    - cp -r .next/static .next/standalone/.next/static
    - cp -r public .next/standalone/public

  artifacts:
    paths:
      - .env
      - .next/standalone/        # Standalone build dengan server.js
      - package.json
      - package-lock.json
      - ecosystem.config.js      # PM2 config
    expire_in: 1 week
  dependencies:
    - install:dependencies
    - download-secret-var
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/'
  tags: [build-autoscale]

# ============================================
# DEPLOY STAGE
# ============================================

deploy:
  stage: deploy
  image: ubuntu:jammy
  before_script:
    - apt-get update -qq && apt-get install -y -qq openssh-client rsync
    - eval "$(ssh-agent -s)"
    - echo "$SSH_PRIVATE_KEY" | base64 -d > id_rsa
    - chmod 600 id_rsa
    - ssh-add id_rsa
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H "$SSH_HOST" >> ~/.ssh/known_hosts
  script:
    - |
      ssh -o StrictHostKeyChecking=no "$SSH_USER@$SSH_HOST" <<EOF
        sudo mkdir -p $DEPLOY_PATH
        sudo chown -R $USER:$USER $DEPLOY_PATH
        sudo chmod -R 775 $DEPLOY_PATH
      EOF

    # Rsync standalone directory
    - >
      rsync -e "ssh -o StrictHostKeyChecking=no" -avz --delete
      --rsync-path="sudo rsync"
      .next "$SSH_USER@$SSH_HOST:$DEPLOY_PATH/"

    # Rsync config files
    - >
      rsync -e "ssh -o StrictHostKeyChecking=no" -avz
      --rsync-path="sudo rsync"
      ecosystem.config.js .env "$SSH_USER@$SSH_HOST:$DEPLOY_PATH/"

    - |
      ssh -o StrictHostKeyChecking=no "$SSH_USER@$SSH_HOST" <<EOF
        set -e
        cd $DEPLOY_PATH

        sudo mkdir -p ./logs
        sudo touch ./logs/web-error.log ./logs/web-out.log
        
        sudo chown -R $USER:$USER $DEPLOY_PATH
        sudo chmod -R 775 $DEPLOY_PATH

        pm2 reload $DEPLOY_PATH/ecosystem.config.js --env production || pm2 start $DEPLOY_PATH/ecosystem.config.js --env production
        pm2 save
      EOF
  environment:
    name: production
    url: https://cms.example.com/
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/'
  needs:
    - build
    - download-secret-var
  tags: [deploy-autoscale]

# ============================================
# RELEASE STAGE - Create GitLab Release only
# ============================================

release:create:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script:
    - echo "Creating GitLab Release for $CI_COMMIT_TAG"
  release:
    tag_name: $CI_COMMIT_TAG
    name: 'Release $CI_COMMIT_TAG'
    description: |
      ## Release $CI_COMMIT_TAG

      Next.js Standalone build artifacts are available.

      ### ðŸ“¦ Deployment
      Deployed to production server.

      ---
      **Full Changelog**: $CI_PROJECT_URL/-/compare/$CI_COMMIT_BEFORE_SHA...$CI_COMMIT_TAG
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/'
  needs:
    - build
  tags: [release-autoscale]
